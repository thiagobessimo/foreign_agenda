{"version":3,"sources":["../../src/bootstrap/requires-writer.ts"],"names":["paramRe","SEGMENT_POINTS","STATIC_POINTS","DYNAMIC_POINTS","SPLAT_PENALTY","ROOT_POINTS","isRootSegment","segment","isDynamic","test","isSplat","segmentize","uri","replace","split","rankRoute","path","reduce","score","lastHash","resetLastHash","pickComponentFields","page","_","pick","getComponents","pages","map","uniqBy","c","componentChunkName","orderBy","value","getMatchPaths","createMatchPathEntry","index","matchPath","undefined","reporter","panic","matchPathPages","forEach","push","length","newMatches","isInsideMatchPath","find","pageWithMatchPath","sort","a","b","order","localeCompare","createHash","matchPaths","components","cleanedClientVisitedPageComponents","notVisitedPageComponents","cleanedSSRVisitedPageComponents","crypto","update","JSON","stringify","digest","writeAll","state","program","values","process","env","GATSBY_EXPERIMENTAL_DEV_SSR","ssrVisitedPageComponents","visitedPages","get","filter","some","s","GATSBY_EXPERIMENTAL_LAZY_DEVJS","clientVisitedPageComponents","component","pageComponentChunkName","newHash","hotImport","GATSBY_HOT_LOADER","hotMethod","lazySyncRequires","join","syncRequires","lazyClientSyncRequires","asyncRequires","relativeComponentPath","relative","writeAndMove","virtualFilePath","file","data","destination","directory","tmp","Date","now","fs","writeFile","then","move","overwrite","Promise","all","debouncedWriteAll","debounce","activity","activityTimer","id","start","store","getState","end","leading","emitter","on","pendingActivity","startListener"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AAeA;AACA;AACA,MAAMA,OAAO,GAAG,QAAhB;AAEA,MAAMC,cAAc,GAAG,CAAvB;AACA,MAAMC,aAAa,GAAG,CAAtB;AACA,MAAMC,cAAc,GAAG,CAAvB;AACA,MAAMC,aAAa,GAAG,CAAtB;AACA,MAAMC,WAAW,GAAG,CAApB;;AAEA,MAAMC,aAAa,GAAIC,OAAD,IAA8BA,OAAO,KAAM,EAAjE;;AACA,MAAMC,SAAS,GAAID,OAAD,IAA8BP,OAAO,CAACS,IAAR,CAAaF,OAAb,CAAhD;;AACA,MAAMG,OAAO,GAAIH,OAAD,IAA8BA,OAAO,KAAM,GAA3D;;AAEA,MAAMI,UAAU,GAAIC,GAAD,IACjBA,GAAG,CACD;AADC,CAEAC,OAFH,CAEW,cAFX,EAE4B,EAF5B,EAGGC,KAHH,CAGU,GAHV,CADF;;AAMA,MAAMC,SAAS,GAAIC,IAAD,IAChBL,UAAU,CAACK,IAAD,CAAV,CAAiBC,MAAjB,CAAwB,CAACC,KAAD,EAAQX,OAAR,KAAoB;AAC1CW,EAAAA,KAAK,IAAIjB,cAAT;AACA,MAAIK,aAAa,CAACC,OAAD,CAAjB,EAA4BW,KAAK,IAAIb,WAAT,CAA5B,KACK,IAAIG,SAAS,CAACD,OAAD,CAAb,EAAwBW,KAAK,IAAIf,cAAT,CAAxB,KACA,IAAIO,OAAO,CAACH,OAAD,CAAX,EAAsBW,KAAK,IAAIjB,cAAc,GAAGG,aAA1B,CAAtB,KACAc,KAAK,IAAIhB,aAAT;AACL,SAAOgB,KAAP;AACD,CAPD,EAOG,CAPH,CADF,C,CASA;;;AAEA,IAAIC,QAAuB,GAAG,IAA9B;;AAEO,MAAMC,aAAa,GAAG,MAAY;AACvCD,EAAAA,QAAQ,GAAG,IAAX;AACD,CAFM;;;;AAIP,MAAME,mBAAmB,GAAIC,IAAD,IAC1BC,gBAAEC,IAAF,CAAOF,IAAP,EAAa,CAAE,WAAF,EAAe,oBAAf,CAAb,CADF;;AAGO,MAAMG,aAAa,GACxBC,KAD2B,IAG3B,qBAAEA,KAAF,EACGC,GADH,CACON,mBADP,EAEGO,MAFH,CAEUC,CAAC,IAAIA,CAAC,CAACC,kBAFjB,EAGGC,OAHH,CAGWF,CAAC,IAAIA,CAAC,CAACC,kBAHlB,EAIGE,KAJH,EAHK;AASP;AACA;AACA;AACA;;;;;AACA,MAAMC,aAAa,GACjBP,KADoB,IAEY;AAOhC,QAAMQ,oBAAoB,GAAG,CAC3BZ,IAD2B,EAE3Ba,KAF2B,KAGP;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAgBd,IAAtB;;AAEA,QAAIc,SAAS,KAAKC,SAAlB,EAA6B;AAC3B,aAAOC,kBAASC,KAAT,CACJ,mDAAkDjB,IAAI,CAACN,IAAK,sBADxD,CAAP;AAGD;;AAED,WAAO,EACL,GAAGM,IADE;AAELc,MAAAA,SAFK;AAGLD,MAAAA,KAHK;AAILjB,MAAAA,KAAK,EAAEH,SAAS,CAACqB,SAAD;AAJX,KAAP;AAMD,GAlBD;;AAoBA,QAAMI,cAAsC,GAAG,EAA/C;AAEAd,EAAAA,KAAK,CAACe,OAAN,CAAc,CAACnB,IAAD,EAAoBa,KAApB,KAA4C;AACxD,QAAIb,IAAI,CAACc,SAAT,EAAoB;AAClBI,MAAAA,cAAc,CAACE,IAAf,CAAoBR,oBAAoB,CAACZ,IAAD,EAAOa,KAAP,CAAxC;AACD;AACF,GAJD,EA7BgC,CAmChC;AACA;AACA;AACA;AACA;;AACA,MAAIK,cAAc,CAACG,MAAnB,EAA2B;AACzB,UAAMC,UAAkC,GAAG,EAA3C;AAEAlB,IAAAA,KAAK,CAACe,OAAN,CAAc,CAACnB,IAAD,EAAoBa,KAApB,KAA4C;AACxD,YAAMU,iBAAiB,GAAG,CAAC,CAACL,cAAc,CAACM,IAAf,CAC1BC,iBAAiB,IACf,CAACzB,IAAI,CAACc,SAAN,IAAmB,kBAAMW,iBAAiB,CAACX,SAAxB,EAAmCd,IAAI,CAACN,IAAxC,CAFK,CAA5B;;AAKA,UAAI6B,iBAAJ,EAAuB;AACrBD,QAAAA,UAAU,CAACF,IAAX,CACER,oBAAoB,CAClB,EACE,GAAGZ,IADL;AAEEc,UAAAA,SAAS,EAAEd,IAAI,CAACN;AAFlB,SADkB,EAKlBmB,KALkB,CADtB;AASD;AACF,KAjBD,EAHyB,CAqBzB;;AACAK,IAAAA,cAAc,CAACE,IAAf,CAAoB,GAAGE,UAAvB;AACD;;AAED,SAAOJ,cAAc,CAClBQ,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd;AACA,UAAMC,KAAK,GAAGD,CAAC,CAAChC,KAAF,GAAU+B,CAAC,CAAC/B,KAA1B;;AACA,QAAIiC,KAAK,KAAK,CAAd,EAAiB;AACf,aAAOA,KAAP;AACD,KALa,CAOd;AACA;;;AACA,WAAOF,CAAC,CAACb,SAAF,CAAYgB,aAAZ,CAA0BF,CAAC,CAACd,SAA5B,CAAP;AACD,GAXI,EAYJT,GAZI,CAYA,CAAC;AAAEX,IAAAA,IAAF;AAAQoB,IAAAA;AAAR,GAAD,KAAyB;AAC5B,WAAO;AAAEpB,MAAAA,IAAF;AAAQoB,MAAAA;AAAR,KAAP;AACD,GAdI,CAAP;AAeD,CAlFD;;AAoFA,MAAMiB,UAAU,GAAG,CACjBC,UADiB,EAEjBC,UAFiB,EAGjBC,kCAHiB,EAIjBC,wBAJiB,EAKjBC,+BALiB,KAOjBC,gBACGN,UADH,CACe,KADf,EAEGO,MAFH,CAGIC,IAAI,CAACC,SAAL,CAAe;AACbR,EAAAA,UADa;AAEbC,EAAAA,UAFa;AAGbC,EAAAA,kCAHa;AAIbC,EAAAA,wBAJa;AAKbC,EAAAA;AALa,CAAf,CAHJ,EAWGK,MAXH,CAWW,KAXX,CAPF,C,CAoBA;;;AACO,MAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiD;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAMvC,KAAK,GAAG,CAAC,GAAGuC,KAAK,CAACvC,KAAN,CAAYyC,MAAZ,EAAJ,CAAd;AACA,QAAMb,UAAU,GAAGrB,aAAa,CAACP,KAAD,CAAhC;AACA,QAAM6B,UAAU,GAAG9B,aAAa,CAACC,KAAD,CAAhC;AACA,MAAIgC,+BAA4D,GAAG,EAAnE;;AAEA,MAAIU,OAAO,CAACC,GAAR,CAAYC,2BAAhB,EAA6C;AAAA;;AAC3C,UAAMC,wBAAwB,GAAG,CAC/B,IAAI,0BAAAN,KAAK,CAACO,YAAN,CAAmBC,GAAnB,CAAwB,QAAxB,iFAAkCN,MAAlC,OAA8C,EAAlD,CAD+B,CAAjC,CAD2C,CAK3C;;AACAT,IAAAA,+BAA+B,GAAGH,UAAU,CAACmB,MAAX,CAAkB7C,CAAC,IACnD0C,wBAAwB,CAACI,IAAzB,CAA8BC,CAAC,IAAIA,CAAC,KAAK/C,CAAC,CAACC,kBAA3C,CADgC,CAAlC;AAGD;;AAED,MAAI0B,kCAA+D,GAAG,EAAtE;AACA,MAAIC,wBAAqD,GAAG,EAA5D;;AAEA,MAAIW,OAAO,CAACC,GAAR,CAAYQ,8BAAhB,EAAgD;AAAA;;AAC9C,UAAMC,2BAA2B,GAAG,CAClC,IAAI,2BAAAb,KAAK,CAACO,YAAN,CAAmBC,GAAnB,CAAwB,QAAxB,mFAAkCN,MAAlC,OAA8C,EAAlD,CADkC,CAApC,CAD8C,CAK9C;;AACAX,IAAAA,kCAAkC,GAAGD,UAAU,CAACmB,MAAX,CAAkBK,SAAS,IAC9DD,2BAA2B,CAACH,IAA5B,CACEK,sBAAsB,IACpBA,sBAAsB,KAAKD,SAAS,CAACjD,kBAFzC,CADmC,CAArC,CAN8C,CAa9C;;AACA2B,IAAAA,wBAAwB,GAAGF,UAAU,CAACmB,MAAX,CACzBK,SAAS,IACP;AACA,KAACvB,kCAAkC,CAACmB,IAAnC,CACC9C,CAAC,IAAIA,CAAC,CAACC,kBAAF,KAAyBiD,SAAS,CAACjD,kBADzC,CAHsB,CAA3B;AAOD;;AAED,QAAMmD,OAAO,GAAG5B,UAAU,CACxBC,UADwB,EAExBC,UAFwB,EAGxBC,kCAHwB,EAIxBC,wBAJwB,EAKxBC,+BALwB,CAA1B;;AAQA,MAAIuB,OAAO,KAAK9D,QAAhB,EAA0B;AACxB;AACA,WAAO,KAAP;AACD;;AAEDA,EAAAA,QAAQ,GAAG8D,OAAX,CAzDuE,CA2DvE;;AACA,QAAMC,SAAS,GACbd,OAAO,CAACC,GAAR,CAAYc,iBAAZ,KAAmC,cAAnC,GACK,kDADL,GAEK,EAHP;AAIA,QAAMC,SAAS,GACbhB,OAAO,CAACC,GAAR,CAAYc,iBAAZ,KAAmC,cAAnC,GAAoD,KAApD,GAA4D,EAD9D;;AAGA,MAAIf,OAAO,CAACC,GAAR,CAAYC,2BAAhB,EAA6C;AAC3C;AACA,QAAIe,gBAAgB,GAAI,GAAEH,SAAU;AACxC;AACA;AACA,OAHI;AAIAG,IAAAA,gBAAgB,IAAK,8BAA6B3B,+BAA+B,CAC9E/B,GAD+C,CAE7CE,CAAD,IACG,MACCA,CAAC,CAACC,kBACH,MAAKsD,SAAU,2BAA0B,+BAASvD,CAAC,CAACkD,SAAX,CAAsB,MALpB,EAO/CO,IAP+C,CAOzC,KAPyC,CAOnC;AACnB,QARI;AAUA,kDAAa,4BAAb,EAA0CD,gBAA1C;AACD,GApFsE,CAsFvE;;;AACA,MAAIE,YAAY,GAAI,GAAEL,SAAU;AAClC;AACA;AACA;AACA,KAJE;AAKAK,EAAAA,YAAY,IAAK,2BAA0BhC,UAAU,CAClD5B,GADwC,CAEtCE,CAAD,IACG,MACCA,CAAC,CAACC,kBACH,MAAKsD,SAAU,2BAA0B,+BAASvD,CAAC,CAACkD,SAAX,CAAsB,MAL3B,EAOxCO,IAPwC,CAOlC,KAPkC,CAO5B;AACjB,MARE;;AAUA,MAAIlB,OAAO,CAACC,GAAR,CAAYQ,8BAAhB,EAAgD;AAC9C;AACA,QAAIW,sBAAsB,GAAI,GAAEN,SAAU;AAC9C;AACA;AACA,OAHI;AAIAM,IAAAA,sBAAsB,IAAK,+BAA8BhC,kCAAkC,CACxF7B,GADsD,CAEpDE,CAAD,IACG,MACCA,CAAC,CAACC,kBACH,MAAKsD,SAAU,2BAA0B,+BAASvD,CAAC,CAACkD,SAAX,CAAsB,MALb,EAOtDO,IAPsD,CAOhD,KAPgD,CAO1C;AACnB,QARI,CAN8C,CAgB9C;;AACAE,IAAAA,sBAAsB,IAAK,yCAAwC/B,wBAAwB,CACxF9B,GADgE,CAE9DE,CAAD,IAAsC,MAAKA,CAAC,CAACC,kBAAmB,SAFD,EAIhEwD,IAJgE,CAI1D,KAJ0D,CAIpD;AACnB,QALI;AAOA,kDAAa,oCAAb,EAAkDE,sBAAlD;AACD,GAzBD,MAyBO;AACL,kDAAa,oCAAb,EAAmD,EAAnD;AACD,GAjIsE,CAmIvE;;;AACA,MAAIC,aAAa,GAAI;AACvB;AACA,GAFE;AAGAA,EAAAA,aAAa,IAAK,2BAA0BlC,UAAU,CACnD5B,GADyC,CACpCE,CAAD,IAAqC;AACxC;AACA,UAAM6D,qBAAqB,GAAG1E,cAAK2E,QAAL,CAC5B,kEAAiC,UAAjC,CAD4B,EAE5B9D,CAAC,CAACkD,SAF0B,CAA9B;;AAKA,WAAQ,MAAKlD,CAAC,CAACC,kBAAmB,oBAAmB,4BAClD,KAAI4D,qBAAsB,EADwB,CAEnD,2BAA0B7D,CAAC,CAACC,kBAAmB,OAFjD;AAGD,GAXyC,EAYzCwD,IAZyC,CAYnC,KAZmC,CAY7B;AACjB,MAbE;;AAeA,QAAMM,YAAY,GAAG,CACnBC,eADmB,EAEnBC,IAFmB,EAGnBC,IAHmB,KAID;AAClB,kDAAYF,eAAZ,EAA6BE,IAA7B,EADkB,CAGlB;AACA;AACA;;AACA,UAAMC,WAAW,GAAG,+BAAS9B,OAAO,CAAC+B,SAAjB,EAA6B,QAA7B,EAAsCH,IAAtC,CAApB;AACA,UAAMI,GAAG,GAAI,GAAEF,WAAY,IAAGG,IAAI,CAACC,GAAL,EAAW,EAAzC;AACA,WAAOC,iBACJC,SADI,CACMJ,GADN,EACWH,IADX,EAEJQ,IAFI,CAEC,MAAMF,iBAAGG,IAAH,CAAQN,GAAR,EAAaF,WAAb,EAA0B;AAAES,MAAAA,SAAS,EAAE;AAAb,KAA1B,CAFP,CAAP;AAGD,GAfD;;AAiBA,QAAMC,OAAO,CAACC,GAAR,CAAY,CAChBf,YAAY,CAAE,2BAAF,EAA+B,kBAA/B,EAAkDL,YAAlD,CADI,EAEhBK,YAAY,CACT,4BADS,EAET,mBAFS,EAGVH,aAHU,CAFI,EAOhBG,YAAY,CACT,2BADS,EAET,kBAFS,EAGV/B,IAAI,CAACC,SAAL,CAAeR,UAAf,EAA2B,IAA3B,EAAiC,CAAjC,CAHU,CAPI,CAAZ,CAAN;AAcA,SAAO,IAAP;AACD,CAtLM;;;;AAwLP,MAAMsD,iBAAiB,GAAGrF,gBAAEsF,QAAF,CACxB,YAA2B;AACzB,QAAMC,QAAQ,GAAGxE,kBAASyE,aAAT,CAAwB,oBAAxB,EAA6C;AAC5DC,IAAAA,EAAE,EAAG;AADuD,GAA7C,CAAjB;;AAGAF,EAAAA,QAAQ,CAACG,KAAT;AACA,QAAMjD,QAAQ,CAACkD,aAAMC,QAAN,EAAD,CAAd;AACAL,EAAAA,QAAQ,CAACM,GAAT;AACD,CARuB,EASxB,GATwB,EAUxB;AACE;AACA;AACAC,EAAAA,OAAO,EAAE;AAHX,CAVwB,CAA1B;;AAiBA,IAAIjD,OAAO,CAACC,GAAR,CAAYQ,8BAAhB,EAAgD;AAC9C;AACF;AACA;AACA;AACEyC,iBAAQC,EAAR,CAAY,4BAAZ,EAAyC,MAAY;AACnDjF,sBAASkF,eAAT,CAAyB;AAAER,MAAAA,EAAE,EAAG;AAAP,KAAzB;;AACAJ,IAAAA,iBAAiB;AAClB,GAHD;AAID;;AAED,IAAIxC,OAAO,CAACC,GAAR,CAAYC,2BAAhB,EAA6C;AAC3C;AACF;AACA;AACA;AACEgD,iBAAQC,EAAR,CAAY,4BAAZ,EAAyC,MAAY;AACnDjF,sBAASkF,eAAT,CAAyB;AAAER,MAAAA,EAAE,EAAG;AAAP,KAAzB;;AACAJ,IAAAA,iBAAiB;AAClB,GAHD;AAID;AAED;AACA;AACA;AACA;;;AACO,MAAMa,aAAa,GAAG,MAAY;AACvCH,iBAAQC,EAAR,CAAY,aAAZ,EAA0B,MAAY;AACpCjF,sBAASkF,eAAT,CAAyB;AAAER,MAAAA,EAAE,EAAG;AAAP,KAAzB;;AACAJ,IAAAA,iBAAiB;AAClB,GAHD;;AAKAU,iBAAQC,EAAR,CAAY,iBAAZ,EAA8B,MAAY;AACxCjF,sBAASkF,eAAT,CAAyB;AAAER,MAAAA,EAAE,EAAG;AAAP,KAAzB;;AACAJ,IAAAA,iBAAiB;AAClB,GAHD;;AAKAU,iBAAQC,EAAR,CAAY,aAAZ,EAA0B,MAAY;AACpCjF,sBAASkF,eAAT,CAAyB;AAAER,MAAAA,EAAE,EAAG;AAAP,KAAzB;;AACAJ,IAAAA,iBAAiB;AAClB,GAHD;;AAKAU,iBAAQC,EAAR,CAAY,qBAAZ,EAAkC,MAAY;AAC5CjF,sBAASkF,eAAT,CAAyB;AAAER,MAAAA,EAAE,EAAG;AAAP,KAAzB;;AACAJ,IAAAA,iBAAiB;AAClB,GAHD;AAID,CApBM","sourcesContent":["import _ from \"lodash\"\nimport path from \"path\"\nimport fs from \"fs-extra\"\nimport crypto from \"crypto\"\nimport { slash } from \"gatsby-core-utils\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { match } from \"@reach/router/lib/utils\"\nimport { joinPath } from \"gatsby-core-utils\"\nimport { store, emitter } from \"../redux/\"\nimport { IGatsbyState, IGatsbyPage } from \"../redux/types\"\nimport {\n  writeModule,\n  getAbsolutePathForVirtualModule,\n} from \"../utils/gatsby-webpack-virtual-modules\"\n\ninterface IGatsbyPageComponent {\n  component: string\n  componentChunkName: string\n}\n\ninterface IGatsbyPageMatchPath {\n  path: string\n  matchPath: string | undefined\n}\n\n// path ranking algorithm copied (with small adjustments) from `@reach/router` (internal util, not exported from the package)\n// https://github.com/reach/router/blob/28a79e7fc3a3487cb3304210dc3501efb8a50eba/src/lib/utils.js#L216-L254\nconst paramRe = /^:(.+)/\n\nconst SEGMENT_POINTS = 4\nconst STATIC_POINTS = 3\nconst DYNAMIC_POINTS = 2\nconst SPLAT_PENALTY = 1\nconst ROOT_POINTS = 1\n\nconst isRootSegment = (segment: string): boolean => segment === ``\nconst isDynamic = (segment: string): boolean => paramRe.test(segment)\nconst isSplat = (segment: string): boolean => segment === `*`\n\nconst segmentize = (uri: string): Array<string> =>\n  uri\n    // strip starting/ending slashes\n    .replace(/(^\\/+|\\/+$)/g, ``)\n    .split(`/`)\n\nconst rankRoute = (path: string): number =>\n  segmentize(path).reduce((score, segment) => {\n    score += SEGMENT_POINTS\n    if (isRootSegment(segment)) score += ROOT_POINTS\n    else if (isDynamic(segment)) score += DYNAMIC_POINTS\n    else if (isSplat(segment)) score -= SEGMENT_POINTS + SPLAT_PENALTY\n    else score += STATIC_POINTS\n    return score\n  }, 0)\n// end of copied `@reach/router` internals\n\nlet lastHash: string | null = null\n\nexport const resetLastHash = (): void => {\n  lastHash = null\n}\n\nconst pickComponentFields = (page: IGatsbyPage): IGatsbyPageComponent =>\n  _.pick(page, [`component`, `componentChunkName`])\n\nexport const getComponents = (\n  pages: Array<IGatsbyPage>\n): Array<IGatsbyPageComponent> =>\n  _(pages)\n    .map(pickComponentFields)\n    .uniqBy(c => c.componentChunkName)\n    .orderBy(c => c.componentChunkName)\n    .value()\n\n/**\n * Get all dynamic routes and sort them by most specific at the top\n * code is based on @reach/router match utility (https://github.com/reach/router/blob/152aff2352bc62cefc932e1b536de9efde6b64a5/src/lib/utils.js#L224-L254)\n */\nconst getMatchPaths = (\n  pages: Array<IGatsbyPage>\n): Array<IGatsbyPageMatchPath> => {\n  interface IMatchPathEntry extends IGatsbyPage {\n    index: number\n    score: number\n    matchPath: string\n  }\n\n  const createMatchPathEntry = (\n    page: IGatsbyPage,\n    index: number\n  ): IMatchPathEntry => {\n    const { matchPath } = page\n\n    if (matchPath === undefined) {\n      return reporter.panic(\n        `Error: matchPath property is undefined for page ${page.path}, should be a string`\n      ) as never\n    }\n\n    return {\n      ...page,\n      matchPath,\n      index,\n      score: rankRoute(matchPath),\n    }\n  }\n\n  const matchPathPages: Array<IMatchPathEntry> = []\n\n  pages.forEach((page: IGatsbyPage, index: number): void => {\n    if (page.matchPath) {\n      matchPathPages.push(createMatchPathEntry(page, index))\n    }\n  })\n\n  // Pages can live in matchPaths, to keep them working without doing another network request\n  // we save them in matchPath. We use `@reach/router` path ranking to score paths/matchPaths\n  // and sort them so more specific paths are before less specific paths.\n  // More info in https://github.com/gatsbyjs/gatsby/issues/16097\n  // small speedup: don't bother traversing when no matchPaths found.\n  if (matchPathPages.length) {\n    const newMatches: Array<IMatchPathEntry> = []\n\n    pages.forEach((page: IGatsbyPage, index: number): void => {\n      const isInsideMatchPath = !!matchPathPages.find(\n        pageWithMatchPath =>\n          !page.matchPath && match(pageWithMatchPath.matchPath, page.path)\n      )\n\n      if (isInsideMatchPath) {\n        newMatches.push(\n          createMatchPathEntry(\n            {\n              ...page,\n              matchPath: page.path,\n            },\n            index\n          )\n        )\n      }\n    })\n    // Add afterwards because the new matches are not relevant for the existing search\n    matchPathPages.push(...newMatches)\n  }\n\n  return matchPathPages\n    .sort((a, b) => {\n      // The higher the score, the higher the specificity of our matchPath\n      const order = b.score - a.score\n      if (order !== 0) {\n        return order\n      }\n\n      // if specificity is the same we do lexigraphic comparison of path to ensure\n      // deterministic order regardless of order pages where created\n      return a.matchPath.localeCompare(b.matchPath)\n    })\n    .map(({ path, matchPath }) => {\n      return { path, matchPath }\n    })\n}\n\nconst createHash = (\n  matchPaths: Array<IGatsbyPageMatchPath>,\n  components: Array<IGatsbyPageComponent>,\n  cleanedClientVisitedPageComponents: Array<IGatsbyPageComponent>,\n  notVisitedPageComponents: Array<IGatsbyPageComponent>,\n  cleanedSSRVisitedPageComponents: Array<IGatsbyPageComponent>\n): string =>\n  crypto\n    .createHash(`md5`)\n    .update(\n      JSON.stringify({\n        matchPaths,\n        components,\n        cleanedClientVisitedPageComponents,\n        notVisitedPageComponents,\n        cleanedSSRVisitedPageComponents,\n      })\n    )\n    .digest(`hex`)\n\n// Write out pages information.\nexport const writeAll = async (state: IGatsbyState): Promise<boolean> => {\n  const { program } = state\n  const pages = [...state.pages.values()]\n  const matchPaths = getMatchPaths(pages)\n  const components = getComponents(pages)\n  let cleanedSSRVisitedPageComponents: Array<IGatsbyPageComponent> = []\n\n  if (process.env.GATSBY_EXPERIMENTAL_DEV_SSR) {\n    const ssrVisitedPageComponents = [\n      ...(state.visitedPages.get(`server`)?.values() || []),\n    ]\n\n    // Remove any page components that no longer exist.\n    cleanedSSRVisitedPageComponents = components.filter(c =>\n      ssrVisitedPageComponents.some(s => s === c.componentChunkName)\n    )\n  }\n\n  let cleanedClientVisitedPageComponents: Array<IGatsbyPageComponent> = []\n  let notVisitedPageComponents: Array<IGatsbyPageComponent> = []\n\n  if (process.env.GATSBY_EXPERIMENTAL_LAZY_DEVJS) {\n    const clientVisitedPageComponents = [\n      ...(state.visitedPages.get(`client`)?.values() || []),\n    ]\n\n    // Remove any page components that no longer exist.\n    cleanedClientVisitedPageComponents = components.filter(component =>\n      clientVisitedPageComponents.some(\n        pageComponentChunkName =>\n          pageComponentChunkName === component.componentChunkName\n      )\n    )\n\n    // Get list of page components that the user has _not_ visited.\n    notVisitedPageComponents = components.filter(\n      component =>\n        // Filter out page components the user has visited.\n        !cleanedClientVisitedPageComponents.some(\n          c => c.componentChunkName === component.componentChunkName\n        )\n    )\n  }\n\n  const newHash = createHash(\n    matchPaths,\n    components,\n    cleanedClientVisitedPageComponents,\n    notVisitedPageComponents,\n    cleanedSSRVisitedPageComponents\n  )\n\n  if (newHash === lastHash) {\n    // Nothing changed. No need to rewrite files\n    return false\n  }\n\n  lastHash = newHash\n\n  // TODO: Remove all \"hot\" references in this `syncRequires` variable when fast-refresh is the default\n  const hotImport =\n    process.env.GATSBY_HOT_LOADER !== `fast-refresh`\n      ? `const { hot } = require(\"react-hot-loader/root\")`\n      : ``\n  const hotMethod =\n    process.env.GATSBY_HOT_LOADER !== `fast-refresh` ? `hot` : ``\n\n  if (process.env.GATSBY_EXPERIMENTAL_DEV_SSR) {\n    // Create file with sync requires of visited page components files.\n    let lazySyncRequires = `${hotImport}\n  // prefer default export if available\n  const preferDefault = m => (m && m.default) || m\n  \\n\\n`\n    lazySyncRequires += `exports.ssrComponents = {\\n${cleanedSSRVisitedPageComponents\n      .map(\n        (c: IGatsbyPageComponent): string =>\n          `  \"${\n            c.componentChunkName\n          }\": ${hotMethod}(preferDefault(require(\"${joinPath(c.component)}\")))`\n      )\n      .join(`,\\n`)}\n  }\\n\\n`\n\n    writeModule(`$virtual/ssr-sync-requires`, lazySyncRequires)\n  }\n\n  // Create file with sync requires of components/json files.\n  let syncRequires = `${hotImport}\n\n// prefer default export if available\nconst preferDefault = m => (m && m.default) || m\n\\n\\n`\n  syncRequires += `exports.components = {\\n${components\n    .map(\n      (c: IGatsbyPageComponent): string =>\n        `  \"${\n          c.componentChunkName\n        }\": ${hotMethod}(preferDefault(require(\"${joinPath(c.component)}\")))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n\n  if (process.env.GATSBY_EXPERIMENTAL_LAZY_DEVJS) {\n    // Create file with sync requires of visited page components files.\n    let lazyClientSyncRequires = `${hotImport}\n  // prefer default export if available\n  const preferDefault = m => (m && m.default) || m\n  \\n\\n`\n    lazyClientSyncRequires += `exports.lazyComponents = {\\n${cleanedClientVisitedPageComponents\n      .map(\n        (c: IGatsbyPageComponent): string =>\n          `  \"${\n            c.componentChunkName\n          }\": ${hotMethod}(preferDefault(require(\"${joinPath(c.component)}\")))`\n      )\n      .join(`,\\n`)}\n  }\\n\\n`\n\n    // Add list of not visited components.\n    lazyClientSyncRequires += `exports.notVisitedPageComponents = {\\n${notVisitedPageComponents\n      .map(\n        (c: IGatsbyPageComponent): string => `  \"${c.componentChunkName}\": true`\n      )\n      .join(`,\\n`)}\n  }\\n\\n`\n\n    writeModule(`$virtual/lazy-client-sync-requires`, lazyClientSyncRequires)\n  } else {\n    writeModule(`$virtual/lazy-client-sync-requires`, ``)\n  }\n\n  // Create file with async requires of components/json files.\n  let asyncRequires = `// prefer default export if available\nconst preferDefault = m => (m && m.default) || m\n\\n`\n  asyncRequires += `exports.components = {\\n${components\n    .map((c: IGatsbyPageComponent): string => {\n      // we need a relative import path to keep contenthash the same if directory changes\n      const relativeComponentPath = path.relative(\n        getAbsolutePathForVirtualModule(`$virtual`),\n        c.component\n      )\n\n      return `  \"${c.componentChunkName}\": () => import(\"${slash(\n        `./${relativeComponentPath}`\n      )}\" /* webpackChunkName: \"${c.componentChunkName}\" */)`\n    })\n    .join(`,\\n`)}\n}\\n\\n`\n\n  const writeAndMove = (\n    virtualFilePath: string,\n    file: string,\n    data: string\n  ): Promise<void> => {\n    writeModule(virtualFilePath, data)\n\n    // files in .cache are not used anymore as part of webpack builds, but\n    // still can be used by other tools (for example `gatsby serve` reads\n    // `match-paths.json` to setup routing)\n    const destination = joinPath(program.directory, `.cache`, file)\n    const tmp = `${destination}.${Date.now()}`\n    return fs\n      .writeFile(tmp, data)\n      .then(() => fs.move(tmp, destination, { overwrite: true }))\n  }\n\n  await Promise.all([\n    writeAndMove(`$virtual/sync-requires.js`, `sync-requires.js`, syncRequires),\n    writeAndMove(\n      `$virtual/async-requires.js`,\n      `async-requires.js`,\n      asyncRequires\n    ),\n    writeAndMove(\n      `$virtual/match-paths.json`,\n      `match-paths.json`,\n      JSON.stringify(matchPaths, null, 4)\n    ),\n  ])\n\n  return true\n}\n\nconst debouncedWriteAll = _.debounce(\n  async (): Promise<void> => {\n    const activity = reporter.activityTimer(`write out requires`, {\n      id: `requires-writer`,\n    })\n    activity.start()\n    await writeAll(store.getState())\n    activity.end()\n  },\n  500,\n  {\n    // using \"leading\" can cause double `writeAll` call - particularly\n    // when refreshing data using `/__refresh` hook.\n    leading: false,\n  }\n)\n\nif (process.env.GATSBY_EXPERIMENTAL_LAZY_DEVJS) {\n  /**\n   * Start listening to CREATE_CLIENT_VISITED_PAGE events so we can rewrite\n   * files as required\n   */\n  emitter.on(`CREATE_CLIENT_VISITED_PAGE`, (): void => {\n    reporter.pendingActivity({ id: `requires-writer` })\n    debouncedWriteAll()\n  })\n}\n\nif (process.env.GATSBY_EXPERIMENTAL_DEV_SSR) {\n  /**\n   * Start listening to CREATE_SERVER_VISITED_PAGE events so we can rewrite\n   * files as required\n   */\n  emitter.on(`CREATE_SERVER_VISITED_PAGE`, (): void => {\n    reporter.pendingActivity({ id: `requires-writer` })\n    debouncedWriteAll()\n  })\n}\n\n/**\n * Start listening to CREATE/DELETE_PAGE events so we can rewrite\n * files as required\n */\nexport const startListener = (): void => {\n  emitter.on(`CREATE_PAGE`, (): void => {\n    reporter.pendingActivity({ id: `requires-writer` })\n    debouncedWriteAll()\n  })\n\n  emitter.on(`CREATE_PAGE_END`, (): void => {\n    reporter.pendingActivity({ id: `requires-writer` })\n    debouncedWriteAll()\n  })\n\n  emitter.on(`DELETE_PAGE`, (): void => {\n    reporter.pendingActivity({ id: `requires-writer` })\n    debouncedWriteAll()\n  })\n\n  emitter.on(`DELETE_PAGE_BY_PATH`, (): void => {\n    reporter.pendingActivity({ id: `requires-writer` })\n    debouncedWriteAll()\n  })\n}\n"],"file":"requires-writer.js"}